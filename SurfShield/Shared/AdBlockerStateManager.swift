//
//  AdBlockerStateManager.swift
//  SufrShield
//
//  Created by –ê—Ä—Ç—É—Ä –ö—É–ª–∏–∫ on 25.08.2025.
//

import Foundation
import Combine

/// –ú–µ–Ω–µ–¥–∂–µ—Ä —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ —Ä–µ–∫–ª–∞–º—ã - —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
@MainActor
class AdBlockerStateManager: ObservableObject {
    static let shared = AdBlockerStateManager()
    
    @Published private(set) var isEnabled: Bool = false
    
    private struct UserDefaultsKeys {
        static let adBlockerEnabled = "adBlockerEnabled"
    }
    
    private init() {
        loadState()
    }
    
    /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑ UserDefaults
    private func loadState() {
        isEnabled = UserDefaults.standard.bool(forKey: UserDefaultsKeys.adBlockerEnabled)
        print("üì± –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞: \(isEnabled ? "–≤–∫–ª—é—á–µ–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω")")
    }
    
    /// –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ RulesConverter)
    internal func updateState(_ newState: Bool) {
        isEnabled = newState
    }
    
    /// –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    static func getCurrentState() async -> Bool {
        return UserDefaults.standard.bool(forKey: UserDefaultsKeys.adBlockerEnabled)
    }
    
    /// –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ RulesConverter)
    static func saveState(_ isEnabled: Bool) async {
        UserDefaults.standard.set(isEnabled, forKey: UserDefaultsKeys.adBlockerEnabled)
        print("üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: \(isEnabled ? "–≤–∫–ª—é—á–µ–Ω" : "–≤—ã–∫–ª—é—á–µ–Ω")")
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await MainActor.run {
            shared.updateState(isEnabled)
        }
    }
    
    /// –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    static func reset() {
        UserDefaults.standard.removeObject(forKey: UserDefaultsKeys.adBlockerEnabled)
        Task { @MainActor in
            shared.updateState(false)
        }
        print("üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω–æ")
    }
}
