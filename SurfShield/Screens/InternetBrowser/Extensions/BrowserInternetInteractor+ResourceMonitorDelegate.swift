import Foundation

extension BrowserInternetInteractor: ResourceMonitorDelegate {
    func resourceAnalysisCompleted(_ data: ResourceAnalysisData) {
        DispatchQueue.main.async {
            self.resourceAnalysis = data
        }
        
        print("üìä ResourceMonitor: –ê–Ω–∞–ª–∏–∑ —Ä–µ—Å—É—Ä—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")
        print("   - –í—Å–µ–≥–æ —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: \(data.totalPageResources)")
        print("   - –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: \(data.totalLoadedResources)")
        print("   - –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: \(data.blockedCount)")
        print("   - –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: \(String(format: "%.1f", data.blockedPercentage))%")
        
        if data.blockedCount > 0 {
            userDefaultsObserver.updateWebViewBlockedStatistics(data)
            let blockedResources = Set(data.pageResources).subtracting(Set(data.loadedResources))
            print("üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:")
            for resource in Array(blockedResources).prefix(10) { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                print("   - \(resource)")
            }
            if blockedResources.count > 10 {
                print("   ... –∏ –µ—â–µ \(blockedResources.count - 10) —Ä–µ—Å—É—Ä—Å–æ–≤")
            }
        }
    }
}
